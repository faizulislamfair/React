{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.M. FAIR\\\\Desktop\\\\weather_app\\\\weather-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component'; // api call api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"543131be8589bf754ffee80adfb1bebc\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min)\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 237.15);\n    return cell;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/S.M. FAIR/Desktop/weather_app/weather-app/src/App.js"],"names":["React","Component","Weather","API_key","App","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","state","undefined","icon","description","error","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AAEA,OAAO,qCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CAEA;;;AACA,MAAMC,OAAO,GAAC,kCAAd;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACC,SAAxB,CAAkC;AAEhCI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAqBdC,UArBc,GAqBD,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEL,OAAQ,EAA7E,CAA5B;AAEA,YAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACXC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADJ;AAEXC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFX;AAGXE,QAAAA,OAAO,EAAE,KAAKC,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcC,IAA9B,CAHE;AAIXC,QAAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcE,QAA9B,CAJC;AAKXC,QAAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcG,QAA9B;AALC,OAAd;AAOD,KAnCa;;AAEZ,SAAKC,KAAL,GAAa;AACXV,MAAAA,IAAI,EAAEW,SADK;AAEXT,MAAAA,OAAO,EAAES,SAFE;AAGXC,MAAAA,IAAI,EAAED,SAHK;AAIXL,MAAAA,IAAI,EAAEK,SAJK;AAKXP,MAAAA,OAAO,EAAEO,SALE;AAMXH,MAAAA,QAAQ,EAAEG,SANC;AAOXF,MAAAA,QAAQ,EAACE,SAPE;AAQXE,MAAAA,WAAW,EAAC,EARD;AASXC,MAAAA,KAAK,EAAC;AATK,KAAb;AAWA,SAAKtB,UAAL;AACD;;AAEDa,EAAAA,UAAU,CAACE,IAAD,EAAM;AACd,QAAIQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAG,MAAlB,CAAX;AACA,WAAOQ,IAAP;AACD;;AAmBDG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWV,IAA1B;AAAgC,QAAA,OAAO,EAAE,KAAKU,KAAL,CAAWR,OAApD;AAA6D,QAAA,YAAY,EAAE,KAAKQ,KAAL,CAAWN,OAAtF;AACA,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWF,QADrB;AAEA,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD,QAFrB;AAGA,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWG;AAHxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAjD+B;;AAoDlC,eAAevB,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component'\n\n// api call api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_key=\"543131be8589bf754ffee80adfb1bebc\"\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n    this.getWeather();\n  }\n\n  calCelsius(temp){\n    let cell = Math.floor(temp - 237.15);\n    return cell;\n  }\n\n  getWeather = async () => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n       city: response.name,\n       country: response.sys.country,\n       celsius: this.calCelsius(response.main.temp),\n       temp_max: this.calCelsius(response.main.temp_max),\n       temp_min: this.calCelsius(response.main.temp_min)\n    })\n  }\n   \n\n  render(){\n    return(\n      <div className=\"App\">\n        <Weather city={this.state.city} country={this.state.country} temp_celsius={this.state.celsius} \n        temp_max={this.state.temp_max}\n        temp_min={this.state.temp_min}\n        description={this.state.description}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}