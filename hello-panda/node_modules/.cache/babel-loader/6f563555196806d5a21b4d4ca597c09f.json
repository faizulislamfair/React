{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.M. FAIR\\\\Desktop\\\\weather_app\\\\weather-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component'; // api call api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"543131be8589bf754ffee80adfb1bebc\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon: this.weatherIcon.Thunderstorm\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description,\n        weatherIcon: this.state.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/S.M. FAIR/Desktop/weather_app/weather-app/src/App.js"],"names":["React","Component","Weather","API_key","App","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","icon","weatherIcon","Thunderstorm","state","undefined","error","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AAEA,OAAO,qCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CAEA;;;AACA,MAAMC,OAAO,GAAC,kCAAd;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACC,SAAxB,CAAkC;AAEhCI,EAAAA,WAAW,GAAG;AACZ;;AADY,SA+BdC,UA/Bc,GA+BD,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEL,OAAQ,EAA7E,CAA5B;AAEA,YAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACXC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADJ;AAEXC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFX;AAGXE,QAAAA,OAAO,EAAE,KAAKC,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcC,IAA9B,CAHE;AAIXC,QAAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcE,QAA9B,CAJC;AAKXC,QAAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcG,QAA9B,CALC;AAMXC,QAAAA,WAAW,EAAEf,QAAQ,CAACgB,OAAT,CAAiB,CAAjB,EAAoBD,WANtB;AAOXE,QAAAA,IAAI,EAAC,KAAKC,WAAL,CAAiBC;AAPX,OAAd;AASD,KA/Ca;;AAEZ,SAAKC,KAAL,GAAa;AACXf,MAAAA,IAAI,EAAEgB,SADK;AAEXd,MAAAA,OAAO,EAAEc,SAFE;AAGXJ,MAAAA,IAAI,EAAEI,SAHK;AAIXV,MAAAA,IAAI,EAAEU,SAJK;AAKXZ,MAAAA,OAAO,EAAEY,SALE;AAMXR,MAAAA,QAAQ,EAAEQ,SANC;AAOXP,MAAAA,QAAQ,EAACO,SAPE;AAQXN,MAAAA,WAAW,EAAC,EARD;AASXO,MAAAA,KAAK,EAAC;AATK,KAAb;AAWA,SAAKzB,UAAL;AAEA,SAAKqB,WAAL,GAAmB;AACjBC,MAAAA,YAAY,EAAE,iBADG;AAEjBI,MAAAA,OAAO,EAAC,UAFS;AAGjBC,MAAAA,IAAI,EAAC,kBAHY;AAIjBC,MAAAA,IAAI,EAAC,SAJY;AAKjBC,MAAAA,UAAU,EAAC,QALM;AAMjBC,MAAAA,KAAK,EAAC,cANW;AAOjBC,MAAAA,MAAM,EAAC;AAPU,KAAnB;AASD;;AAEDlB,EAAAA,UAAU,CAACE,IAAD,EAAM;AACd,QAAIiB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWnB,IAAI,GAAG,MAAlB,CAAX;AACA,WAAOiB,IAAP;AACD;;AAqBDG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWf,IAA1B;AAAgC,QAAA,OAAO,EAAE,KAAKe,KAAL,CAAWb,OAApD;AAA6D,QAAA,YAAY,EAAE,KAAKa,KAAL,CAAWX,OAAtF;AACA,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWP,QADrB;AAEA,QAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWN,QAFrB;AAGA,QAAA,WAAW,EAAE,KAAKM,KAAL,CAAWL,WAHxB;AAIA,QAAA,WAAW,EAAE,KAAKK,KAAL,CAAWH;AAJxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA/D+B;;AAkElC,eAAetB,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component'\n\n// api call api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_key=\"543131be8589bf754ffee80adfb1bebc\"\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n    this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle:\"wi-sleet\",\n      Rain:\"wi-storm-showers\",\n      Snow:\"wi-snow\",\n      Atmosphere:\"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\"\n    }\n  }\n\n  calCelsius(temp){\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async () => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n       city: response.name,\n       country: response.sys.country,\n       celsius: this.calCelsius(response.main.temp),\n       temp_max: this.calCelsius(response.main.temp_max),\n       temp_min: this.calCelsius(response.main.temp_min),\n       description: response.weather[0].description,\n       icon:this.weatherIcon.Thunderstorm\n    })\n  }\n   \n\n  render(){\n    return(\n      <div className=\"App\">\n        <Weather city={this.state.city} country={this.state.country} temp_celsius={this.state.celsius} \n        temp_max={this.state.temp_max}\n        temp_min={this.state.temp_min}\n        description={this.state.description}\n        weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}