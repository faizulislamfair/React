{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.M. FAIR\\\\Desktop\\\\weather_app\\\\weather-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport Form from './app_component/form.component'; // api call api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"543131be8589bf754ffee80adfb1bebc\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (city && country) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n        const response = await api_call.json();\n        console.log(response);\n        this.setState({\n          city: response.name,\n          country: response.sys.country,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description\n        });\n        this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId === 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        loadweather: this.getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description,\n        weatherIcon: this.state.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/S.M. FAIR/Desktop/weather_app/weather-app/src/App.js"],"names":["React","Component","Weather","Form","API_key","App","constructor","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","get_WeatherIcon","weatherIcon","id","error","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeId","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport Form from './app_component/form.component';\n\n\n// api call api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_key=\"543131be8589bf754ffee80adfb1bebc\"\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle:\"wi-sleet\",\n      Rain:\"wi-storm-showers\",\n      Snow:\"wi-snow\",\n      Atmosphere:\"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\"\n    }\n  }\n\n  calCelsius(temp){\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId){\n    switch(true){\n        case rangeId >= 200 && rangeId <= 232:\n          this.setState({icon: this.weatherIcon.Thunderstorm});\n          break;\n        case rangeId >= 300 && rangeId <= 321:\n          this.setState({icon: this.weatherIcon.Drizzle});\n          break;\n        case rangeId >= 500 && rangeId <= 531:\n          this.setState({icon: this.weatherIcon.Rain});\n          break;\n        case rangeId >= 600 && rangeId <= 622:\n          this.setState({icon: this.weatherIcon.Snow});\n          break;\n        case rangeId >= 701 && rangeId <= 781:\n          this.setState({icon: this.weatherIcon.Atmosphere});\n          break;\n        case rangeId === 800:\n          this.setState({icon: this.weatherIcon.Clear});\n          break;\n        case rangeId === 801 && rangeId <= 804:\n          this.setState({icon: this.weatherIcon.Clouds});\n          break;\n          default:\n            this.setState({ icon: this.weatherIcon.Clouds});\n    }\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    \n    if(city && country){\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n       city: response.name,\n       country: response.sys.country,\n       celsius: this.calCelsius(response.main.temp),\n       temp_max: this.calCelsius(response.main.temp_max),\n       temp_min: this.calCelsius(response.main.temp_min),\n       description: response.weather[0].description\n    });\n\n    this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n \n    }\n    else{\n      this.setState({error: true});\n    }\n\n     };\n   \n\n  render(){\n    return(\n      <div className=\"App\">\n        <Form loadweather={this.getWeather}/>\n        <Weather city={this.state.city} country={this.state.country} temp_celsius={this.state.celsius} \n        temp_max={this.state.temp_max}\n        temp_min={this.state.temp_min}\n        description={this.state.description}\n        weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}